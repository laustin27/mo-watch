{"version":3,"sources":["NoiseEvent.js","NoiseEventList.js","App.js","reportWebVitals.js","index.js"],"names":["NoiseEvent","props","className","style","display","flexDirection","icon","faVolumeUp","startTime","endTime","duration","key","NoiseEventList","content","useListVals","firebase","database","ref","values","loading","faFrown","faHourglass","length","map","noiseEvent","index","StartTimestampMinute","StartTimestampSecond","EndTimestampMinute","EndTimestampSecond","DurationMinutes","DurationSeconds","faSmileBeam","faQuestion","class","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","marginTop","onClick","alert","faTrashAlt","paddingRight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAmBeA,MAff,SAAoBC,GAChB,OACE,sBAAKC,UAAU,wBAAwBC,MAAO,CAACC,QAAS,OAAQC,cAAe,OAA/E,UACE,sBAAKF,MAAO,CAACC,QAAS,OAAQC,cAAe,OAA7C,UACE,cAAC,IAAD,CAAiBC,KAAMC,MACvB,sBAAML,UAAU,mBAAhB,sBAEF,sBAAqBC,MAAO,CAACC,QAAS,OAAQC,cAAe,UAA7D,UACE,+BAAO,kBAAYJ,QAAZ,IAAYA,OAAZ,EAAYA,EAAOO,WAAY,MAAQP,EAAMQ,UACpD,+BAAO,qBAAeR,QAAf,IAAeA,OAAf,EAAeA,EAAOS,cAFrBT,EAAMU,S,QC+CTC,MAnDf,SAAwBX,GACtB,IAEIY,EAFJ,EAAiCC,YAAYb,EAAMc,SAASC,WAAWC,IAAI,iBAA3E,mBAAOC,EAAP,KAAeC,EAAf,KA2CA,OAvCEN,EAJF,KAKI,sBAAKX,UAAU,oBAAf,UACE,cAAC,IAAD,CAAiBI,KAAMc,IAASlB,UAAU,aAC1C,yDAEKiB,EAEP,sBAAKjB,UAAU,oBAAf,UACE,cAAC,IAAD,CAAiBI,KAAMe,IAAanB,UAAU,aAC9C,4CAEKgB,GAAUA,EAAOI,OAAS,EAC5B,OACLJ,QADK,IACLA,OADK,EACLA,EAAQK,KAAI,SAACC,EAAYC,GACvB,OACE,cAAC,EAAD,CAEEjB,UAAWgB,EAAWE,qBAAuB,IAAMF,EAAWG,qBAC9DlB,QAASe,EAAWI,mBAAqB,IAAMJ,EAAWK,mBAC1DnB,SAAUc,EAAWM,gBAAkB,IAAMN,EAAWO,iBAHjDN,MAOW,GAAjBP,EAAOI,OAEd,sBAAKpB,UAAU,oBAAf,UACE,cAAC,IAAD,CAAiBI,KAAM0B,IAAa9B,UAAU,aAC9C,0CACA,iEAIF,sBAAKA,UAAU,oBAAf,UACE,cAAC,IAAD,CAAiBI,KAAM2B,IAAY/B,UAAU,aAC7C,0CACA,0FAKJ,qBAAKgC,MAAM,6BAAX,SACIrB,K,0BC/BRE,IAASoB,cAZc,CACrBC,OAAQ,0CACRC,WAAY,2BACZC,YAAa,+CACbC,UAAW,WACXC,cAAe,uBACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBA6BFC,MAvBf,WAKE,OACE,qCACE,iCAEE,sBAAMzC,MAAO,CAAC0C,UAAW,UAAzB,wBAEF,qBAAK3C,UAAU,OAAf,SACE,cAAC,EAAD,CAAgBa,SAAUA,QAE5B,iCACE,yBAAQ+B,QAdd,WACEC,MAAM,sBAasB7C,UAAU,UAAlC,UACE,cAAC,IAAD,CAAiBI,KAAM0C,IAAY7C,MAAO,CAAC8C,aAAc,SAD3D,iBC3BOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d8d325dd.chunk.js","sourcesContent":["import './NoiseEvent.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faVolumeUp } from '@fortawesome/free-solid-svg-icons'\n\nfunction NoiseEvent(props) {\n    return (\n      <div className=\"noise-event-container\" style={{display: 'flex', flexDirection: 'row'}}>\n        <div style={{display: 'flex', flexDirection: 'row'}}>\n          <FontAwesomeIcon icon={faVolumeUp} />\n          <span className=\"noise-event-text\">Bark!</span>\n        </div>\n        <div key={props.key} style={{display: 'flex', flexDirection: 'column'}}>\n          <span>{'Range: ' + props?.startTime + ' - ' + props.endTime}</span>\n          <span>{'Duration: ' + props?.duration}</span>\n        </div>\n      </div>\n    )\n}\n\nexport default NoiseEvent;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react'\nimport './NoiseEventList.css';\nimport NoiseEvent from './NoiseEvent.js'\nimport { faSmileBeam, faFrown, faHourglass, faQuestion } from '@fortawesome/free-solid-svg-icons'\nimport { useListVals } from 'react-firebase-hooks/database';\n\nfunction NoiseEventList(props) {\n  const [values, loading, error] = useListVals(props.firebase.database().ref(\"/NoiseEvents\"));\n\n  let content;\n  if (error) {\n    content = \n      <div className=\"message-container\">\n        <FontAwesomeIcon icon={faFrown} className=\"big-icon\"/>\n        <h1>Something went wrong</h1>\n      </div>\n  } else if (loading) {\n    content = \n      <div className=\"message-container\">\n        <FontAwesomeIcon icon={faHourglass} className=\"big-icon\"/>\n        <h1>Loading</h1>\n      </div>\n  } else if (values && values.length > 0) {\n    content = \n      values?.map((noiseEvent, index) => { \n        return (\n          <NoiseEvent \n            key = {index}\n            startTime={noiseEvent.StartTimestampMinute + ':' + noiseEvent.StartTimestampSecond}\n            endTime={noiseEvent.EndTimestampMinute + ':' + noiseEvent.EndTimestampSecond}\n            duration={noiseEvent.DurationMinutes + ':' + noiseEvent.DurationSeconds}\n          />\n        )\n      });\n  } else if (values.length == 0) {\n    content = \n      <div className=\"message-container\">\n        <FontAwesomeIcon icon={faSmileBeam} className=\"big-icon\"/>\n        <h1>Hooray!!</h1>\n        <span>No barks have happened yet</span>\n      </div>\n  } else {\n    content = \n      <div className=\"message-container\">\n        <FontAwesomeIcon icon={faQuestion} className=\"big-icon\"/>\n        <h1>Not Sure</h1>\n        <span>This is embarassing... I don't know what to display</span>\n      </div>\n  }\n\n  return (\n    <div class=\"noise-event-list-container\">\n      { content }\n    </div>\n  );\n}\n\nexport default NoiseEventList;\n","import React from 'react'\nimport NoiseEventList from './NoiseEventList';\nimport firebase from 'firebase/app'\nimport \"firebase/database\"\nimport './App.css'\nimport './Button.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBLYuScmM2f7tn458Ue9TiWVS5FnuCExfQ\",\n  authDomain: \"mo-watch.firebaseapp.com\",\n  databaseURL: \"https://mo-watch-default-rtdb.firebaseio.com\",\n  projectId: \"mo-watch\",\n  storageBucket: \"mo-watch.appspot.com\",\n  messagingSenderId: \"86065285680\",\n  appId: \"1:86065285680:web:eb770abf0d22044715bbf5\",\n  measurementId: \"G-TFCK2JPGGG\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nfunction App() {\n  function clear() {\n    alert('clear coming soon');\n  }\n\n  return (\n    <>\n      <header>\n        {/* <img src={headerImg} /> */}\n        <span style={{marginTop: '0.5rem'}}>Mo Watch</span>\n      </header>\n      <div className=\"body\">\n        <NoiseEventList firebase={firebase}/>\n      </div>\n      <footer>\n        <button onClick={clear} className=\"primary\">\n          <FontAwesomeIcon icon={faTrashAlt} style={{paddingRight: '8px'}} />Clear\n          </button>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}