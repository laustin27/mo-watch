{"version":3,"sources":["NoiseEvent.js","NoiseEventList.js","App.js","reportWebVitals.js","index.js"],"names":["NoiseEvent","NoiseEventList","props","content","React","useState","useListVals","firebase","database","ref","values","loading","error","console","log","className","icon","faFrown","faHourglass","length","map","noiseEvent","StartTimestampMinute","StartTimestampSecond","EndTimestampMinute","EndTimestampSecond","DurationMinutes","DurationSeconds","faSmileBeam","faQuestion","class","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","style","marginTop","onClick","alert","faTrashAlt","paddingRight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAgBeA,I,eC0DAC,MAnEf,SAAwBC,GACtB,IAmBIC,EAnBJ,EAAsCC,IAAMC,SAAS,IAArD,mBAGA,GAHA,UAGiCC,YAAYJ,EAAMK,SAASC,WAAWC,IAAI,kBAA3E,mBAAOC,EAAP,KAAeC,EAAf,KAAwBC,EAAxB,KAwDA,OAtDAC,QAAQC,IAAI,SAAUJ,GAgBpBP,EADES,EAEA,sBAAKG,UAAU,oBAAf,UACE,cAAC,IAAD,CAAiBC,KAAMC,IAASF,UAAU,aAC1C,yDAEKJ,EAEP,sBAAKI,UAAU,oBAAf,UACE,cAAC,IAAD,CAAiBC,KAAME,IAAaH,UAAU,aAC9C,4CAEKL,GAAUA,EAAOS,OAAS,EAC5B,OACLT,QADK,IACLA,OADK,EACLA,EAAQU,KAAI,SAACC,GAEEA,EAAWC,qBAA6BD,EAAWE,qBACrDF,EAAWG,mBAA2BH,EAAWI,mBAChDJ,EAAWK,gBAAwBL,EAAWM,mBAGpC,GAAjBjB,EAAOS,OAEd,sBAAKJ,UAAU,oBAAf,UACE,cAAC,IAAD,CAAiBC,KAAMY,IAAab,UAAU,aAC9C,0CACA,iEAIF,sBAAKA,UAAU,oBAAf,UACE,cAAC,IAAD,CAAiBC,KAAMa,IAAYd,UAAU,aAC7C,0CACA,0FAINF,QAAQC,IAAI,UAAWX,GAGrB,qBAAK2B,MAAM,6BAAX,SACI3B,K,0BC/CRI,IAASwB,cAZc,CACrBC,OAAQ,0CACRC,WAAY,2BACZC,YAAa,+CACbC,UAAW,WACXC,cAAe,uBACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBA6BFC,MAvBf,WAKE,OACE,qCACE,iCAEE,sBAAMC,MAAO,CAACC,UAAW,UAAzB,wBAEF,qBAAK3B,UAAU,OAAf,SACE,cAAC,EAAD,CAAgBR,SAAUA,QAE5B,iCACE,yBAAQoC,QAdd,WACEC,MAAM,sBAasB7B,UAAU,UAAlC,UACE,cAAC,IAAD,CAAiBC,KAAM6B,IAAYJ,MAAO,CAACK,aAAc,SAD3D,iBC3BOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0a06106c.chunk.js","sourcesContent":["import './NoiseEvent.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\n\nfunction NoiseEvent(props) {\n    return (\n      <div className=\"noise-event-container\">\n        {/* <FontAwesomeIcon icon={faCoffee} /> */}\n        <span className=\"noise-event-text\">Bark!</span>\n        <span className=\"noise-event-start\">{props?.startTime}</span>\n        <span className=\"noise-event-end\">{props?.endTime}</span>\n        <span className=\"noise-event-duration\">{props?.duration}</span>\n      </div>\n    )\n}\n\nexport default NoiseEvent;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react'\nimport './NoiseEventList.css';\nimport NoiseEvent from './NoiseEvent.js'\nimport { faSmileBeam, faFrown, faHourglass, faQuestion } from '@fortawesome/free-solid-svg-icons'\nimport { useListVals } from 'react-firebase-hooks/database';\n\nfunction NoiseEventList(props) {\n  const [noiseEvents, setNoiseEvents] = React.useState([]);\n\n  // const [snapshots, loading, error] = useList(props.firebase.database().ref(\"/NoiseEvents\"));\n  const [values, loading, error] = useListVals(props.firebase.database().ref(\"/NoiseEvents\"));\n\n  console.log('values', values);\n\n  const noiseEventList = null;\n\n  // function addTestData() {\n  //   noiseEventsRef.push({\n  //     DurationMinutes: 1,\n  //     DurationSeconds: 6,\n  //     EndTimestampMinute : 3,\n  //     EndTimestampSecond : 56,\n  //     StartTimestampMinute : 2,\n  //     StartTimestampSecond: 50\n  //   });\n  // }\n  let content;\n  if (error) {\n    content = \n      <div className=\"message-container\">\n        <FontAwesomeIcon icon={faFrown} className=\"big-icon\"/>\n        <h1>Something went wrong</h1>\n      </div>\n  } else if (loading) {\n    content = \n      <div className=\"message-container\">\n        <FontAwesomeIcon icon={faHourglass} className=\"big-icon\"/>\n        <h1>Loading</h1>\n      </div>\n  } else if (values && values.length > 0) {\n    content = \n      values?.map((noiseEvent) => { \n        <NoiseEvent \n          startTime={noiseEvent.StartTimestampMinute + ':' + noiseEvent.StartTimestampSecond}\n          endTime={noiseEvent.EndTimestampMinute + ':' + noiseEvent.EndTimestampSecond}\n          duration={noiseEvent.DurationMinutes + ':' + noiseEvent.DurationSeconds}\n        /> \n      });\n  } else if (values.length == 0) {\n    content = \n      <div className=\"message-container\">\n        <FontAwesomeIcon icon={faSmileBeam} className=\"big-icon\"/>\n        <h1>Hooray!!</h1>\n        <span>No barks have happened yet</span>\n      </div>\n  } else {\n    content = \n      <div className=\"message-container\">\n        <FontAwesomeIcon icon={faQuestion} className=\"big-icon\"/>\n        <h1>Not Sure</h1>\n        <span>This is embarassing... I don't know what to display</span>\n      </div>\n  }\n\n  console.log('content', content);\n  \n  return (\n    <div class=\"noise-event-list-container\">\n      { content }\n    </div>\n  );\n}\n\nexport default NoiseEventList;\n","import React from 'react'\nimport NoiseEventList from './NoiseEventList';\nimport firebase from 'firebase/app'\nimport \"firebase/database\"\nimport './App.css'\nimport './Button.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBLYuScmM2f7tn458Ue9TiWVS5FnuCExfQ\",\n  authDomain: \"mo-watch.firebaseapp.com\",\n  databaseURL: \"https://mo-watch-default-rtdb.firebaseio.com\",\n  projectId: \"mo-watch\",\n  storageBucket: \"mo-watch.appspot.com\",\n  messagingSenderId: \"86065285680\",\n  appId: \"1:86065285680:web:eb770abf0d22044715bbf5\",\n  measurementId: \"G-TFCK2JPGGG\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nfunction App() {\n  function clear() {\n    alert('clear coming soon');\n  }\n\n  return (\n    <>\n      <header>\n        {/* <img src={headerImg} /> */}\n        <span style={{marginTop: '0.5rem'}}>Mo Watch</span>\n      </header>\n      <div className=\"body\">\n        <NoiseEventList firebase={firebase}/>\n      </div>\n      <footer>\n        <button onClick={clear} className=\"primary\">\n          <FontAwesomeIcon icon={faTrashAlt} style={{paddingRight: '8px'}} />Clear\n          </button>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}