{"version":3,"sources":["NoiseEventList.js","App.js","reportWebVitals.js","index.js"],"names":["NoiseEventList","props","React","useState","noiseEvents","setNoiseEvents","firebase","database","ref","get","then","snap","val","noiseEventList","map","noiseEvent","startTime","endTime","class","length","style","display","justifyContent","icon","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","marginTop","className","onClick","alert","faTrashAlt","paddingRight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAgCeA,MA1Bf,SAAwBC,GACtB,MAAsCC,IAAMC,WAA5C,mBAAOC,EAAP,KAAoBC,EAApB,KAEAJ,EAAMK,SAASC,WACdC,IAAI,gBACJC,MACAC,MAAK,SAAAC,GAAI,OAAIN,EAAeM,EAAKC,UAElC,IAAMC,EAAc,OAAGT,QAAH,IAAGA,OAAH,EAAGA,EAAaU,KAAI,SAACC,GAChBA,EAAWC,UAAoBD,EAAWE,WAGnE,OACE,qBAAKC,MAAM,6BAAX,SACGL,GAAkBA,EAAeM,OAAS,EACvCN,EACA,sBAAKO,MAAO,CAACC,QAAS,OAAQC,eAAgB,UAA9C,UACE,cAAC,IAAD,CAAiBC,KAAM,gBACvB,0CACA,oE,oCCHZjB,IAASkB,cAZc,CACrBC,OAAQ,0CACRC,WAAY,2BACZC,YAAa,+CACbC,UAAW,WACXC,cAAe,uBACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBA6BFC,MAvBf,WAKE,OACE,qCACE,iCAEE,sBAAMb,MAAO,CAACc,UAAW,UAAzB,wBAEF,qBAAKC,UAAU,OAAf,SACE,cAAC,EAAD,CAAgB7B,SAAUA,QAE5B,iCACE,yBAAQ8B,QAdd,WACEC,MAAM,sBAasBF,UAAU,UAAlC,UACE,cAAC,IAAD,CAAiBZ,KAAMe,IAAYlB,MAAO,CAACmB,aAAc,SAD3D,iBC3BOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ba525ac3.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react'\nimport './NoiseEvent.css';\nimport NoiseEvent from './NoiseEvent.js'\nimport { faSmileBeam } from '@fortawesome/free-solid-svg-icons'\n\nfunction NoiseEventList(props) {\n  const [noiseEvents, setNoiseEvents] = React.useState();\n\n  props.firebase.database()\n  .ref(\"/NoiseEvents\")\n  .get()\n  .then(snap => setNoiseEvents(snap.val()));\n\n  const noiseEventList = noiseEvents?.map((noiseEvent) => {\n    <NoiseEvent startTime={noiseEvent.startTime} endTime={noiseEvent.endTime}/>\n  });\n  \n  return (\n    <div class=\"noise-event-list-container\">\n      {noiseEventList && noiseEventList.length > 0 \n        ? noiseEventList \n        : <div style={{display: 'flex', justifyContent: 'center'}}>\n            <FontAwesomeIcon icon={'faSmileBeam'}/>\n            <h1>Hooray!!</h1>\n            <span>No barks have happened yet</span>\n          </div>\n      }\n    </div>\n  );\n}\n\nexport default NoiseEventList;\n","import React from 'react'\nimport NoiseEventList from './NoiseEventList';\nimport firebase from 'firebase/app'\nimport \"firebase/database\"\nimport './App.css'\nimport './Button.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBLYuScmM2f7tn458Ue9TiWVS5FnuCExfQ\",\n  authDomain: \"mo-watch.firebaseapp.com\",\n  databaseURL: \"https://mo-watch-default-rtdb.firebaseio.com\",\n  projectId: \"mo-watch\",\n  storageBucket: \"mo-watch.appspot.com\",\n  messagingSenderId: \"86065285680\",\n  appId: \"1:86065285680:web:eb770abf0d22044715bbf5\",\n  measurementId: \"G-TFCK2JPGGG\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nfunction App() {\n  function clear() {\n    alert('clear coming soon');\n  }\n\n  return (\n    <>\n      <header>\n        {/* <img src={headerImg} /> */}\n        <span style={{marginTop: '0.5rem'}}>Mo Watch</span>\n      </header>\n      <div className=\"body\">\n        <NoiseEventList firebase={firebase}/>\n      </div>\n      <footer>\n        <button onClick={clear} className=\"primary\">\n          <FontAwesomeIcon icon={faTrashAlt} style={{paddingRight: '8px'}} />Clear\n          </button>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}