{"version":3,"sources":["NoiseEvent.js","moBounce2.gif","NoiseEventList.js","App.js","reportWebVitals.js","index.js"],"names":["NoiseEvent","props","isLoud","volume","isMedium","isQuiet","iconColor","text","className","style","display","flexDirection","alignItmes","icon","faExclamationCircle","color","fontSize","fixedWidth","justifyContent","marginRight","alignItems","startTime","endTime","duration","key","formatTime","data","dataString","toString","length","NoiseEventList","content","useListVals","firebase","database","ref","values","loading","faFrown","src","moBounce","height","width","marginTop","map","noiseEvent","index","LoudNoiseHappened","MediumNoiseHappened","QuietNoiseHappened","StartTimestampMinute","StartTimestampSecond","EndTimestampMinute","EndTimestampSecond","DurationMinutes","DurationSeconds","faSmileBeam","faQuestion","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","dateOptions","year","month","day","App","useObjectVal","transform","val","Date","value","toLocaleDateString","toLocaleTimeString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.663410a0.chunk.js","sourcesContent":["import './NoiseEvent.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons'\n\nfunction NoiseEvent(props) {\n    const isLoud = props.volume == 'loud';\n    const isMedium = props.volume == 'medium';\n    const isQuiet = props.volume == 'quiet';\n\n    const iconColor = isLoud ? 'red' : (isMedium ? 'yellow' : (isQuiet ? 'green' : ''));\n    const text = isLoud ? 'BIG BARK!' : (isMedium ? 'Bark' : (isQuiet ? 'baby bark' : ''));\n    return (\n      <div className=\"noise-event-container\" style={{display: 'flex', flexDirection: 'row', alignItmes: 'center'}}>\n        <FontAwesomeIcon icon={faExclamationCircle} style={{color: iconColor, fontSize: '2rem'}} fixedWidth/>\n        <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', fontSize: '0.75rem'}}>\n          <div style={{display: 'flex', flexDirection: 'row', marginRight: '2rem', alignItems: 'center'}}>\n            <span className=\"noise-event-text\">{text}</span>\n          </div>\n          <div key={props.key} style={{display: 'flex', flexDirection: 'column'}}>\n            <span>{'From: ' + props?.startTime + ' - ' + props.endTime}</span>\n            <span>{'Duration: ' + props?.duration}</span>\n          </div>\n        </div>\n      </div>\n    )\n}\n\nexport default NoiseEvent;\n","export default __webpack_public_path__ + \"static/media/moBounce2.b228a1dc.gif\";","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react'\nimport './NoiseEventList.css';\nimport NoiseEvent from './NoiseEvent.js'\nimport { faSmileBeam, faFrown, faHourglass, faQuestion } from '@fortawesome/free-solid-svg-icons'\nimport { useListVals } from 'react-firebase-hooks/database';\nimport moBounce from './moBounce2.gif'\n\nfunction formatTime(data) {\n  let dataString = data.toString();\n\n  if (dataString) {\n    if (dataString.length == 1) {\n      return '0' + dataString;\n    }\n\n    return dataString;\n  }\n\n  return null;\n}\n\nfunction NoiseEventList(props) {\n  const [values, loading, error] = useListVals(props.firebase.database().ref(\"/NoiseEvents\"));\n\n  let content;\n  if (error) {\n    content = \n      <div className=\"message-container\">\n        <FontAwesomeIcon icon={faFrown} className=\"big-icon\"/>\n        <h1>Something went wrong</h1>\n      </div>\n  } else if (loading) {\n    content = \n      <div className=\"message-container\">\n        <img src={moBounce} style={{height: '70px', width: '70px'}}></img>\n        <h2 style={{marginTop: '0'}}>Loading...</h2>\n      </div>\n  } else if (values && values.length > 0) {\n    content = \n      values?.map((noiseEvent, index) => { \n        const volume = noiseEvent.LoudNoiseHappened == 1 \n                        ? 'loud' \n                        : (\n                            noiseEvent.MediumNoiseHappened == 1\n                            ? 'medium' \n                            : (\n                              noiseEvent.QuietNoiseHappened == 1 ? 'quiet' : ''\n                              )\n                          );\n        return (\n          <NoiseEvent \n            key = {index}\n            volume={volume}\n            startTime={formatTime(noiseEvent.StartTimestampMinute) + ':' + formatTime(noiseEvent.StartTimestampSecond)}\n            endTime={formatTime(noiseEvent.EndTimestampMinute) + ':' + formatTime(noiseEvent.EndTimestampSecond)}\n            duration={formatTime(noiseEvent.DurationMinutes) + ':' + formatTime(noiseEvent.DurationSeconds)}\n          />\n        )\n      });\n  } else if (values.length == 0) {\n    content = \n      <div className=\"message-container\">\n        <FontAwesomeIcon icon={faSmileBeam} className=\"big-icon\"/>\n        <h1>Hooray!!</h1>\n        <span>No barks have happened yet</span>\n      </div>\n  } else {\n    content = \n      <div className=\"message-container\">\n        <FontAwesomeIcon icon={faQuestion} className=\"big-icon\"/>\n        <h1>Not Sure</h1>\n        <span>This is embarassing... I don't know what to display</span>\n      </div>\n  }\n\n  return (\n    <div>\n      { content }\n    </div>\n  );\n}\n\nexport default NoiseEventList;\n","import React from 'react'\nimport NoiseEventList from './NoiseEventList';\nimport firebase from 'firebase/app'\nimport \"firebase/database\"\nimport './App.css'\nimport './Button.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { useObjectVal } from 'react-firebase-hooks/database';\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBLYuScmM2f7tn458Ue9TiWVS5FnuCExfQ\",\n  authDomain: \"mo-watch.firebaseapp.com\",\n  databaseURL: \"https://mo-watch-default-rtdb.firebaseio.com\",\n  projectId: \"mo-watch\",\n  storageBucket: \"mo-watch.appspot.com\",\n  messagingSenderId: \"86065285680\",\n  appId: \"1:86065285680:web:eb770abf0d22044715bbf5\",\n  measurementId: \"G-TFCK2JPGGG\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst dateOptions = {year: 'numeric', month: 'long', day: 'numeric' };\n\nfunction App() {\n  const [value, loading, error] = useObjectVal(\n    firebase.database().ref(\"/StartTime\"),\n    {\n      transform: (val) => (new Date(val))\n    }\n  );\n\n  function clear() {\n    alert('clear coming soon');\n  }\n\n  return (\n    <body>\n      <header>\n        {/* <img src={headerImg} /> */}\n        {/* <span style={{marginTop: '0.5rem'}}>Mo Watch</span> */}\n        { value &&\n          <span>\n            {`Device last started on ${value.toLocaleDateString('en-US', dateOptions)} at ${value.toLocaleTimeString('en-US')}`}\n          </span>\n        }\n      </header>\n      <div className=\"body\">\n        <NoiseEventList firebase={firebase}/>\n      </div>\n    </body>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}